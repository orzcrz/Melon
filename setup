#!/usr/bin/env bash

# Created by crzorz on 2022/09/15
# Copyright © 2022 BaldStudio. All rights reserved.

set -e
set -o pipefail

Logging() {
  local level
  level=$1
  readonly level

  local msg
  msg=$2
  readonly msg

  local timestamp
  timestamp=$(date +'%F %H:%M:%S')
  readonly timestamp

  local format
  format="[${timestamp}][${level}] ${msg}"
  readonly format

  # 忘了这里要不要加 -e
  # 我记得最早加上的时候，通过curl执行脚本输出会多出来e，所以是删了的，忘了，后面用的时候再看
  case $level in
  INFO)
    echo -e "\033[32m${format}\033[0m"
    ;;
  WARNING)
    echo -e "\033[33m${format}\033[0m"
    ;;
  ERROR)
    echo -e "\033[31m${format}\033[0m"
    ;;
  esac
}

LogInfo() {
  Logging INFO "$*"
}

LogWarn() {
  Logging WARNING "$*"
}

LogError() {
  Logging ERROR "$*"
}

PrintSymbols() {
  # ${#变量名} 获取一个变量值的长度
  # seq -s ' ' 5 输出 1 2 3 4 5，seq -s 'a' 5 输出 1a2a3a4a5a
  # sed 's/[0-9]//g' 将 0-9 的数字去掉
  local symbol
  symbol=$1
  readonly symbol

  local length
  length=$2
  readonly length

  local result
  result=$(seq -s "$symbol" "$length" | sed 's/[0-9]//g')
  readonly result
  echo "$result"
}

PrintNotice() {
  # 设置文本为绿色
  tput setaf 2
  PrintSymbols '#' 32
  echo "$(PrintSymbols ' ' 12)$1$(PrintSymbols ' ' 12)"
  PrintSymbols '#' 32
  # 恢复颜色
  tput sgr0
}

cd "$HOME"

ROOT_DIR="$HOME/.melon"
PROFILES_DIR=$ROOT_DIR/profiles

# 安装melon
SetupMelon() {
  LogInfo "==> 尝试安装 melon"
  rm -rf "$ROOT_DIR"
  local url
  url=git@github.com:orzcrz/Melon.git
  readonly url
  git clone --recurse-submodules $url "$ROOT_DIR"

  cd "$ROOT_DIR"
  local py3
  py3=$(which python3)
  readonly py3

  LogInfo "Use Python3 Path: $py3"
  local py3_v
  py3_v=$($py3 -V)
  readonly py3_v
  LogInfo "Current Python Version: $py3_v"

  LogInfo "Generate New Venv."
  local venv_path="venv"
  $py3 -m venv $venv_path

  # shellcheck disable=SC1090
  source $venv_path/bin/activate
  
  set +e
  pip3 install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple/
  python -m pip install --upgrade pip
  set -e

  cd "$HOME"
  LogInfo "已下载最新版本到本地"
}

# homebrew
SetupBrewIfNeeded() {
  LogInfo "==> 尝试安装 Homebrew"
  local cpu_brand
  cpu_brand=$(sysctl -n machdep.cpu.brand_string)
  readonly cpu_brand

  local cpu_arch
  cpu_arch=$(uname -m)
  readonly cpu_arch

  LogInfo "处理器信息： $cpu_brand | $cpu_arch"
  if [[ "$cpu_brand" =~ "Apple" ]] && [[ "$cpu_arch" =~ "arm" ]]; then
    if command -v brew 1>/dev/null 2>&1; then
      LogInfo "已存在，跳过安装"
    else
      LogInfo "安装 arm 版 homebrew"
      local brew_repo=/opt/homebrew
      local remote_url=https://github.com/Homebrew/brew/tarball/master
      sudo mkdir -p $brew_repo
      sudo chown -R "$(whoami)" $brew_repo
      curl -L $remote_url | tar xz --strip 1 -C $brew_repo
    fi
  else
    LogWarn "非 arm 版的没适配，先手动预装吧"
    # shellcheck disable=SC2016
    LogInfo '手动执行这段 ==> /bin/zsh -c "$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)"'
  fi
  cd "$HOME"
  if command -v brew 1>/dev/null 2>&1; then
    LogInfo "安装成功"
  else
    LogError "安装失败"
    exit 1
  fi
}

## pyenv
SetupPyenv() {
  LogInfo "==> 尝试安装 pyenv"
  if command -v pyenv 1>/dev/null 2>&1; then
    LogInfo "已存在，跳过安装"
  else
    brew install pyenv pyenv-virtualenv && LogInfo "已安装 pyenv"
  fi
  if command -v pyenv 1>/dev/null 2>&1; then
    LogInfo "安装成功"
  else
    LogError "安装失败"
  fi
}

## rbenv
SetupRbenv() {
  LogInfo "==> 尝试安装 rbenv"
  if command -v rbenv 1>/dev/null 2>&1; then
    LogInfo "已存在，跳过安装"
  else
    brew install rbenv ruby-build rbenv-vars && LogInfo "已安装 rbenv"
  fi
  if command -v rbenv 1>/dev/null 2>&1; then
    LogInfo "安装成功"
  else
    LogError "安装失败"
  fi
}

## nodenv
SetupNodenv() {
  LogInfo "==> 尝试安装 nodenv"
  if command -v nodenv 1>/dev/null 2>&1; then
    LogInfo "已存在，跳过安装"
  else
    brew install nodenv && LogInfo "已安装 nodenv"
  fi
  if command -v nodenv 1>/dev/null 2>&1; then
    LogInfo "安装成功"
  else
    LogError "安装失败"
  fi
}

## wget
SetupWget() {
  LogInfo "==> 尝试安装 wget"
  if command -v wget 1>/dev/null 2>&1; then
    LogInfo "已存在，跳过安装"
    return
  fi
  brew install wget && LogInfo "已安装 wget"
}

## cookiecutter
SetupCookiecutter() {
  LogInfo "==> 尝试安装 cookiecutter"
  if command -v cookiecutter 1>/dev/null 2>&1; then
    LogInfo "已存在，跳过安装"
    return
  fi
  brew install cookiecutter && LogInfo "已安装 cookiecutter"
}

## tree
SetupTree() {
  LogInfo "==> 尝试安装 cookiecutter"
  if command -v tree 1>/dev/null 2>&1; then
    LogInfo "已存在，跳过安装"
    return
  fi
  brew install tree && LogInfo "已安装 tree"
}

## thefuck
SetupTheFuck() {
  LogInfo "==> 尝试安装 thefuck"
  if command -v fuck 1>/dev/null 2>&1; then
    LogInfo "已存在，跳过安装"
    return
  fi
  brew install thefuck && LogInfo "已安装 thefuck"
}

## cocoapods
SetupCocoapods() {
  LogInfo "==> 尝试安装 cocoapods"
  LogWarn "算了，手动装吧，先用 rbenv 切换 ruby 到 cocoapods 需要的版本"
}

# 安装lldb工具
# https://github.com/facebook/chisel
SetupChisel() {
  LogInfo "==> 尝试安装 chisel"
  brew install chisel && LogInfo "已安装 chisel"
}

SetupNode() {
  LogInfo "==> 尝试安装 node"
  LogWarn "算了，手动装吧，先用 nodenv 切换 node 到需要的版本"
  LogWarn "然后修改镜像 npm config set registry https://registry.npmmirror.com/"
}

PrintNotice "准备配置环境"

SetupMelon

LogWarn "更新以下配置"
LogWarn "$HOME/.pip"
LogWarn "$HOME/.lldbinit"
LogWarn "$HOME/.gitignore_global"
LogWarn "$HOME/.gitconfig"

LogWarn "$HOME/.zshrc"
LogWarn "$HOME/.zprofile"
LogWarn "$HOME/.bash_profile"

ZSH_PLUGIN_DIR="$PROFILES_DIR/oh-my-zsh/custom/plugins"
LogWarn "$ZSH_PLUGIN_DIR/zsh-syntax-highlighting"
LogWarn "$ZSH_PLUGIN_DIR/zsh-autosuggestions"

## 软链当前配置
ln -sf "$PROFILES_DIR/.pip" "$HOME/.pip"
ln -sf "$PROFILES_DIR/lldb/.lldbinit" "$HOME/.lldbinit"

ln -sf "$PROFILES_DIR/.gitignore_global" "$HOME/.gitignore_global"
ln -sf "$PROFILES_DIR/.gitconfig" "$HOME/.gitconfig"

ln -sf "$PROFILES_DIR/.zshrc" "$HOME/.zshrc"
ln -sf "$PROFILES_DIR/.zprofile" "$HOME/.zprofile"
ln -sf "$PROFILES_DIR/.bash_profile" "$HOME/.bash_profile"

ln -sf "$PROFILES_DIR/zsh-syntax-highlighting" "$ZSH_PLUGIN_DIR/zsh-syntax-highlighting"
ln -sf "$PROFILES_DIR/zsh-autosuggestions" "$ZSH_PLUGIN_DIR/zsh-autosuggestions"

SetupBrewIfNeeded
SetupPyenv
SetupRbenv
SetupNodenv
SetupWget
SetupCookiecutter
SetupTree
SetupTheFuck
SetupCocoapods
SetupChisel
SetupNode

PrintNotice "安装完成"
